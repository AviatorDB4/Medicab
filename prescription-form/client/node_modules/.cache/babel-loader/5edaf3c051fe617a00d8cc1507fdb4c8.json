{"ast":null,"code":"import _defineProperty from \"/Users/david/Desktop/Medicab/Medicab/prescription-form/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/david/Desktop/Medicab/Medicab/prescription-form/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/david/Desktop/Medicab/Medicab/prescription-form/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/david/Desktop/Medicab/Medicab/prescription-form/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/david/Desktop/Medicab/Medicab/prescription-form/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/david/Desktop/Medicab/Medicab/prescription-form/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/david/Desktop/Medicab/Medicab/prescription-form/client/src/pages/Prescriptions/Prescriptions.js\";\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../../components/Jumbotron\";\nimport DeleteBtn from \"../../components/DeleteBtn.js\";\nimport API from \"../../utils/API\";\nimport { Link } from 'react-router-dom';\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport { List, ListItem } from \"../../components/List\";\nimport { Input, TextArea, FormBtn } from \"../../components/Form\";\n\nvar Prescriptions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Prescriptions, _Component);\n\n  function Prescriptions() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Prescriptions);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Prescriptions)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      prescriptions: [],\n      drug_medication: \"\",\n      generic: false,\n      amount: \"\",\n      route: \"\",\n      frequency: \"\",\n      why: \"\",\n      how_much: \"\",\n      refills: 0\n    };\n\n    _this.loadPrescriptions = function () {\n      API.getPrescs().then(function (res) {\n        return _this.setState({\n          prescriptions: res.data,\n          drug_medication: \"\",\n          generic: false,\n          strength: \"\",\n          amount: \"\",\n          route: \"\",\n          frequency: \"\",\n          why: \"\",\n          how_much: \"\",\n          refills: 0,\n          notes: \"\"\n        });\n      }).catch(function (err) {\n        return console.log(\"Error\" + err);\n      });\n    };\n\n    _this.deletePresc = function (id) {\n      API.deletePresc(id).then(function (res) {\n        return _this.loadPrescriptions();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n      console.log(name + \": \" + _this.state);\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      console.log(_this.state);\n      event.preventDefault();\n\n      if (_this.state.title && _this.state.author) {\n        API.savePresc({\n          drug_medication: _this.state.drug_medication,\n          generic: _this.state.generic,\n          strength: _this.state.strength,\n          amount: _this.state.amount,\n          route: _this.state.route,\n          frequency: _this.state.frequency,\n          why: _this.state.why,\n          how_much: _this.state.how_much,\n          refills: _this.state.refills,\n          notes: _this.state.notes\n        }).then(function (res) {\n          return _this.loadPrescriptions();\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Prescriptions, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this.state);\n      this.loadPrescriptions();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Enter Prescriptions\")), React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.drug_medication,\n        onChange: this.handleInputChange,\n        name: \"drug_medication\",\n        placeholder: \"Medication Name (required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(Input, {\n        value: this.state.strength,\n        onChange: this.handleInputChange,\n        name: \"strength\",\n        placeholder: \"Strength of Medication\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(Input, {\n        value: this.state.amount,\n        onChange: this.handleInputChange,\n        name: \"amount\",\n        placeholder: \"Per Use Dose (required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(Input, {\n        value: this.state.route,\n        onChange: this.handleInputChange,\n        name: \"route\",\n        placeholder: \"Method of Ingestion (required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(Input, {\n        value: this.state.frequency,\n        onChange: this.handleInputChange,\n        name: \"frequency\",\n        placeholder: \"Frequency of Use (required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(Input, {\n        value: this.state.why,\n        onChange: this.handleInputChange,\n        name: \"why\",\n        placeholder: \"When Should You Use (optional)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(Input, {\n        value: this.state.how_much,\n        onChange: this.handleInputChange,\n        name: \"how_much\",\n        placeholder: \"How Many Pills per Prescription (required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(Input, {\n        value: this.state.refills,\n        onChange: this.handleInputChange,\n        name: \"refills\",\n        placeholder: \"How Many Refills on Your Prescription (required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(TextArea, {\n        value: this.state.notes,\n        onChange: this.handleInputChange,\n        name: \"notes\",\n        placeholder: \"Notes (Optional)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(FormBtn, {\n        disabled: !(this.state.drug_medication && this.state.amount && this.state.strength && this.state.route && this.state.frequency && this.state.why && this.state.how_much && this.state.refills),\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Submit Prescription\"))))), React.createElement(Col, {\n        size: \"md-6 sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"My Prescriptions\")), this.state.prescriptions.length ? React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, this.state.prescriptions.map(function (prescription) {\n        return React.createElement(ListItem, {\n          key: prescription._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/prescriptions/\" + prescription._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, prescription.drug_medication)), React.createElement(DeleteBtn, {\n          onClick: function onClick() {\n            return _this2.deletePresc(prescription._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }));\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"No Results to Display\"))));\n    }\n  }]);\n\n  return Prescriptions;\n}(Component);\n\nexport default Prescriptions;","map":{"version":3,"sources":["/Users/david/Desktop/Medicab/Medicab/prescription-form/client/src/pages/Prescriptions/Prescriptions.js"],"names":["React","Component","Jumbotron","DeleteBtn","API","Link","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","Prescriptions","state","prescriptions","drug_medication","generic","amount","route","frequency","why","how_much","refills","loadPrescriptions","getPrescs","then","res","setState","data","strength","notes","catch","err","console","log","deletePresc","id","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","title","author","savePresc","length","map","prescription","_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Jumbotron from \"../../components/Jumbotron\";\nimport DeleteBtn from \"../../components/DeleteBtn.js\";\nimport API from \"../../utils/API\";\nimport { Link } from 'react-router-dom';\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport { List, ListItem } from \"../../components/List\";\nimport { Input, TextArea, FormBtn } from \"../../components/Form\";\n\nclass Prescriptions extends Component {\n\n  state = {\n    prescriptions: [],\n    drug_medication: \"\",\n    generic: false,\n    amount: \"\",\n    route: \"\",\n    frequency: \"\",\n    why: \"\",\n    how_much: \"\",\n    refills: 0,\n  };\n  debugger\n  componentDidMount() {\n    console.log(this.state);\n    this.loadPrescriptions();\n  }\n\n  loadPrescriptions = () => {\n    API.getPrescs()\n      .then(res => this.setState({\n        prescriptions: res.data,\n        drug_medication: \"\",\n        generic: false,\n        strength: \"\",\n        amount: \"\",\n        route: \"\",\n        frequency: \"\",\n        why: \"\",\n        how_much: \"\",\n        refills: 0,\n        notes: \"\"\n      }))\n      .catch(err => console.log(\"Error\" + err))\n  }\n\n  deletePresc = id => {\n    API.deletePresc(id)\n      .then(res => this.loadPrescriptions())\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    console.log(name + \": \" + this.state)\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    console.log(this.state)\n    event.preventDefault();\n    if (this.state.title && this.state.author) {\n      API.savePresc({\n        drug_medication: this.state.drug_medication,\n        generic: this.state.generic,\n        strength: this.state.strength,\n        amount: this.state.amount,\n        route: this.state.route,\n        frequency: this.state.frequency,\n        why: this.state.why,\n        how_much: this.state.how_much,\n        refills: this.state.refills,\n        notes: this.state.notes\n      })\n        .then(res => this.loadPrescriptions())\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-6\">\n            <Jumbotron>\n              <h1>Enter Prescriptions</h1>\n            </Jumbotron>\n            <Jumbotron>\n              <form>\n                <div>\n                <Input\n                  value={this.state.drug_medication}\n                  onChange={this.handleInputChange}\n                  name=\"drug_medication\"\n                  placeholder=\"Medication Name (required)\"\n                />\n                \n                <Input\n                  value={this.state.strength}\n                  onChange={this.handleInputChange}\n                  name=\"strength\"\n                  placeholder=\"Strength of Medication\"\n                />\n                <Input\n                  value={this.state.amount}\n                  onChange={this.handleInputChange}\n                  name=\"amount\"\n                  placeholder=\"Per Use Dose (required)\"\n                />\n                <Input\n                  value={this.state.route}\n                  onChange={this.handleInputChange}\n                  name=\"route\"\n                  placeholder=\"Method of Ingestion (required)\"\n                />\n                <Input\n                  value={this.state.frequency}\n                  onChange={this.handleInputChange}\n                  name=\"frequency\"\n                  placeholder=\"Frequency of Use (required)\"\n                />\n                <Input\n                  value={this.state.why}\n                  onChange={this.handleInputChange}\n                  name=\"why\"\n                  placeholder=\"When Should You Use (optional)\"\n                />\n                <Input\n                  value={this.state.how_much}\n                  onChange={this.handleInputChange}\n                  name=\"how_much\"\n                  placeholder=\"How Many Pills per Prescription (required)\"\n                />\n                <Input\n                  value={this.state.refills}\n                  onChange={this.handleInputChange}\n                  name=\"refills\"\n                  placeholder=\"How Many Refills on Your Prescription (required)\"\n                />\n                <TextArea\n                  value={this.state.notes}\n                  onChange={this.handleInputChange}\n                  name=\"notes\"\n                  placeholder=\"Notes (Optional)\"\n                />\n\n                <FormBtn\n                  disabled={!(this.state.drug_medication\n                    && this.state.amount\n                    && this.state.strength\n                    && this.state.route\n                    && this.state.frequency\n                    && this.state.why\n                    && this.state.how_much\n                    && this.state.refills)}\n                  onClick={this.handleFormSubmit}\n                >\n                  Submit Prescription\n              </FormBtn>\n              </div>\n              </form>\n            </Jumbotron>\n          </Col>\n          <Col size=\"md-6 sm-12\">\n            <Jumbotron>\n              <h1>My Prescriptions</h1>\n            </Jumbotron>\n            {this.state.prescriptions.length ? (\n              <List>\n                {this.state.prescriptions.map(prescription => (\n                  <ListItem key={prescription._id}>\n                    <Link to={\"/prescriptions/\" + prescription._id}>\n                      <strong>\n                        {prescription.drug_medication}\n                      </strong>\n                    </Link>\n                    <DeleteBtn onClick={() => this.deletePresc(prescription._id)} />\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n                <h3>No Results to Display</h3>\n              )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Prescriptions;"]},"metadata":{},"sourceType":"module"}